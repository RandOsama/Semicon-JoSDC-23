  module Registers(clk,Rr1,Rr2,WriteRegister,regWrite,WriteData,Rd1,Rd2);
	input clk ;		
	input [4:0]Rr1,Rr2,WriteRegister;
   input [31:0]WriteData;
	input regWrite;
	output [31:0] Rd1,Rd2;
	reg [31:0] mem[31:0];
	integer i ;
	/*
	initial begin 
		for (i=0 ; i<32 ; i =i+1)
			begin 
				mem[i] = 0; 
			end	
	end 
	*/
	initial mem[0]= 0;
	assign Rd1=mem[Rr1];
	assign Rd2=mem[Rr2];
	
	always@(posedge clk)
		begin
			if(regWrite & WriteRegister!=0)
				mem[WriteRegister]=WriteData; 
		end
		
endmodule